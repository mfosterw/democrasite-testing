"""
Django settings for democrasite project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import environ

root = environ.Path(__file__) - 2
env = environ.Env()
try:
    environ.Env.read_env(root.file('.env'))
except FileNotFoundError:
    print("No .env file found. Recommended to create one for development.")

SITE_ROOT = root()



# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=True)

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=['127.0.0.1', 'localhost'])


# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'elections.apps.ElectionsConfig',
    'social_django',
    'bootstrap4',
]
# Admin disabled in production
if DEBUG: INSTALLED_APPS.append('django.contrib.admin')

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # Static files
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'democrasite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'elections.views.context_repo',
                'social_django.context_processors.backends',
            ],
        },
    },
]

WSGI_APPLICATION = 'democrasite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': env.db('DATABASE_URL',
        default = 'sqlite:///' + root.path('db.sqlite3')())
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Chicago'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = env.str('STATIC_URL', default='/static/')

STATIC_ROOT = root.path('staticfiles')()

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Django social auth
# https://python-social-auth.readthedocs.io/en/stable/index.html

AUTHENTICATION_BACKENDS = [
    'social_core.backends.github.GithubOAuth2', # Github authentication
    'social_core.backends.google.GoogleOAuth2', # Google authentication
]
# Only social authentication in production
if DEBUG: AUTHENTICATION_BACKENDS.append('django.contrib.auth.backends.ModelBackend')

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.social_auth.associate_by_email',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

# Social auth Github

SOCIAL_AUTH_GITHUB_KEY = env.str('GITHUB_CLIENT_ID', default='')

SOCIAL_AUTH_GITHUB_SECRET = env.str('GITHUB_SECRET', default='')

SOCIAL_AUTH_GITHUB_SCOPE = ['user:email']

# Social auth Google

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = env.str('GOOGLE_CLIENT_ID', default='')

SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = env.str('GOOGLE_SECRET', default='')


# Django bootstrap4
# https://django-bootstrap4.readthedocs.io/en/latest/settings.html

BOOTSTRAP4 = {'include_jquery': True}


# Celery
# https://docs.celeryproject.org/en/stable/django/

CELERY_BROKER_URL = env.str('REDIS_URL', default='redis://localhost:6379')

CELERY_RESULT_BACKEND = env.str('CELERY_RESULT_BACKEND', default=CELERY_BROKER_URL)

# Allow tasks to remain in queue long enough for bills to finish voting period

CELERY_VISIBILITY_TIMEOUT = 60 * 60 * 24 * (2 + 1) # voting + 1 days in seconds

# Raise error on tasks taking too long

CELERY_TASK_SOFT_TIME_LIMIT = 60 * 5 # 5 minutes


# Elections settings

# Github Webhook secret, used to verify requests in elections/webhook.py

ELECTIONS_GITHUB_WEBHOOK_SECRET = env.str('GITHUB_WEBHOOK_SECRET', default='')

# User token for requests to Github API

ELECTIONS_GITHUB_TOKEN = env.str('GITHUB_TOKEN', default='')

# Github repo on which this app operates

ELECTIONS_REPO = 'mfosterw/democrasite-testing'

# Minimum total votes for a bill to pass

ELECTIONS_MINIMUM_QUORUM = 10 if not DEBUG else 0 # No vote minimum for testing

# Proportion of yes votes for a normal bill to pass

ELECTIONS_NORMAL_MAJORITY = 1/2

# Proportion of yes votes for an amendment to the constitution to pass

ELECTIONS_SUPERMAJORITY = 2/3

# Length, in days, that bills are up for vote

ELECTIONS_VOTING_PERIOD = 2
